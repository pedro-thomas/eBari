# Generated by Django 5.0.3 on 2024-05-08 02:56

import django.db.models.deletion
import multiselectfield.db.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('pacientes', '0001_initial'),
        ('registros', '0002_historicofamiliar'),
    ]

    operations = [
        migrations.CreateModel(
            name='Consultas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Data da Consulta')),
                ('type', models.CharField(choices=[('pre_op', 'PreOp'), ('pos_op', 'PosOp')], max_length=20, verbose_name='Tipo')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notas Adicionais')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pacientes.paciente', verbose_name='Paciente')),
            ],
            options={
                'verbose_name': 'Consulta',
                'verbose_name_plural': 'Consultas',
            },
        ),
        migrations.CreateModel(
            name='Exames',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('has_exam', models.BooleanField(default=False)),
                ('hemoglobina', models.CharField(blank=True, max_length=20)),
                ('hematocrito', models.CharField(blank=True, max_length=20)),
                ('hemacias', models.CharField(blank=True, max_length=20)),
                ('rdw', models.CharField(blank=True, max_length=20)),
                ('vcm', models.CharField(blank=True, max_length=20)),
                ('hcm', models.CharField(blank=True, max_length=20)),
                ('chcm', models.CharField(blank=True, max_length=20)),
                ('leucocitos', models.CharField(blank=True, max_length=20)),
                ('colesterol_total', models.CharField(blank=True, max_length=20)),
                ('hdl', models.CharField(blank=True, max_length=20)),
                ('ldl', models.CharField(blank=True, max_length=20)),
                ('vldl', models.CharField(blank=True, max_length=20)),
                ('triglicerideos', models.CharField(blank=True, max_length=20)),
                ('glicemia_de_jejum', models.CharField(blank=True, max_length=20)),
                ('albumina', models.CharField(blank=True, max_length=20)),
                ('ferritina', models.CharField(blank=True, max_length=20)),
                ('ferro_serico', models.CharField(blank=True, max_length=20)),
                ('insulina', models.CharField(blank=True, max_length=20)),
                ('vitamina_D', models.CharField(blank=True, max_length=20)),
                ('vitamina_B12', models.CharField(blank=True, max_length=20)),
                ('vitamina_B9', models.CharField(blank=True, max_length=20)),
                ('hemoglobina_glicada', models.CharField(blank=True, max_length=20)),
                ('homa_ir', models.CharField(blank=True, max_length=20)),
                ('consulta', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='exams', to='consultas.consultas')),
            ],
            options={
                'verbose_name': 'Exame',
                'verbose_name_plural': 'Exames',
            },
        ),
        migrations.CreateModel(
            name='FormBase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meal_place', multiselectfield.db.fields.MultiSelectField(choices=[('Casa', 'Casa'), ('Trabalho', 'Trabalho'), ('Restaurante', 'Restaurante'), ('Escola/Faculdade', 'Escola/Faculdade')], max_length=255, verbose_name='Onde realiza refeições')),
                ('tv_eating', models.BooleanField(choices=[(True, 'Sim'), (False, 'Não')], verbose_name='Realiza as refeições vendo alguma tela (TV, Celular, Computador)')),
                ('chews_food', models.BooleanField(choices=[(True, 'Sim'), (False, 'Não')], verbose_name='Mastiga bem os alimentos')),
                ('fist_food', models.BooleanField(choices=[(True, 'Sim'), (False, 'Não')], verbose_name='É o(a) primeiro a terminar de comer?')),
                ('food_aversions', models.BooleanField(choices=[(True, 'Sim'), (False, 'Não')], verbose_name='Aversões alimentares')),
                ('aversions_type', models.CharField(blank=True, max_length=255, verbose_name='Quais aversões')),
                ('food_preferences', models.BooleanField(choices=[(True, 'Sim'), (False, 'Não')], verbose_name='Preferências alimentares')),
                ('preferences_type', models.CharField(blank=True, max_length=255, verbose_name='Quais preferências')),
                ('food_compulsion', models.BooleanField(choices=[(True, 'Sim'), (False, 'Não')], verbose_name='Compulsões alimentares')),
                ('compulsion_type', models.CharField(blank=True, max_length=255, verbose_name='Qual alimento e motivo')),
                ('food_intolerance', models.BooleanField(choices=[(True, 'Sim'), (False, 'Não')], verbose_name='Intolerância alimentar')),
                ('intolerance_type', models.CharField(blank=True, max_length=255, verbose_name='Quais alimentos')),
                ('food_allergy', models.BooleanField(choices=[(True, 'Sim'), (False, 'Não')], verbose_name='Alergia alimentar')),
                ('allergy_type', models.CharField(blank=True, max_length=255, verbose_name='Quais alimentos')),
                ('water_consumption', models.CharField(choices=[('menos de 500ml', 'Menos de 500ml'), ('500ml a 1l', '500ml a 1L'), ('1l a 2l', '1L a 2L'), ('2l ou mais', '2L ou mais')], max_length=25, verbose_name='Consumo de água')),
                ('ecap', models.CharField(choices=[('Sem CAP', 'Sem CAP'), ('CAP moderada', 'CAP moderada'), ('CAP grave', 'CAP grave')], max_length=25, verbose_name='Escala de compulsão alimentar')),
                ('physical_activity', models.BooleanField(choices=[(True, 'Sim'), (False, 'Não')], verbose_name='Pratica atividade fisica')),
                ('activity_type', models.CharField(blank=True, max_length=255, verbose_name='Qual atividade?/Se não qual o motivo?')),
                ('activity_frequency', models.CharField(blank=True, choices=[('nao pratica', 'Não pratica'), ('1 vez por semana', '1 vez por semana'), ('2 vezes por semana', '2 vezes por semana'), ('3 vezes por semana', '3 vezes por semana'), ('4 vezes por semana', '4 vezes por semana'), ('5 vezes por semana', '5 ou mais vezes por semana')], max_length=25, verbose_name='Frequencia das atividades')),
                ('activity_duration', models.CharField(blank=True, choices=[('nao pratica', 'Não pratica'), ('30 minutos', '30 minutos'), ('1 hora', '1 hora'), ('mais de uma hora', 'mais de uma hora')], max_length=25, verbose_name='Duração das atividades')),
                ('activity_like', models.BooleanField(choices=[(True, 'Sim'), (False, 'Não')], verbose_name='Gosta de fazer atividades fisicas')),
                ('like_activity_type', models.CharField(blank=True, max_length=255, verbose_name='Qual atividade')),
                ('smoker', models.CharField(choices=[('nunca fumou', 'Nunca fumou'), ('ex-fumante', 'Ex-fumante'), ('1 a 4 cigarros', '1 a 4 cigarros'), ('5 a 10 cigarros', '5 a 10 cigarros'), ('Mais de 10 cigarros', 'Mais de 10 cigarros')], max_length=25, verbose_name='Consumo de cigarro')),
                ('alcoholic', models.CharField(choices=[('Raro/nunca', 'Raro/nunca'), ('1 vez por mês', '1 vez por mês'), ('2 vezes por mês', '2 vezes por mês'), ('1 vez por semana', '1 vez por semana'), ('2 vezes por semana', '2 vezes por semana'), ('3 vezes por semana', '3 vezes por semana'), ('Mais de 3 vezes por semana', 'Mais de 3 vezes por semana'), ('Todo dia', 'Todo dia')], max_length=255, verbose_name='Consumo de bebida alcoolica')),
                ('alcoholic_type', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('cerveja', 'Cerveja'), ('vinho', 'Vinho'), ('destilado', 'Destilado / Cachaça'), ('outros', 'Outros')], max_length=255, verbose_name='Qual bebida')),
                ('drink_qtd', models.FloatField(null=True, verbose_name='Quantidade (ml)')),
                ('sleep_time', models.IntegerField(null=True, verbose_name='Horas de sono')),
                ('sleep_somnolence', models.BooleanField(choices=[(True, 'Sim'), (False, 'Não')], verbose_name='Sonolencia durante o dia')),
                ('sleep_wake', models.BooleanField(choices=[(True, 'Sim'), (False, 'Não')], verbose_name='Acorda durante a noite?')),
                ('wake_rested', models.BooleanField(choices=[(True, 'Sim'), (False, 'Não')], verbose_name='Acorda descansado?')),
                ('current_weight', models.FloatField(null=True, verbose_name='Peso atual')),
                ('stature', models.FloatField(null=True, verbose_name='Estatura (m)')),
                ('waist', models.FloatField(null=True, verbose_name='Cintura (cm)')),
                ('hip', models.FloatField(null=True, verbose_name='Quadril (cm)')),
                ('neck', models.FloatField(null=True, verbose_name='Pescoço (cm)')),
                ('weight_excess', models.FloatField(blank=True, null=True, verbose_name='Excesso de peso (atual)')),
                ('accumulated_weight_loss', models.FloatField(blank=True, null=True, verbose_name='Perda de peso (kg)')),
                ('nutri_state', models.CharField(max_length=255, null=True, verbose_name='Estado nutricional')),
                ('breakfast_hour', models.TimeField(blank=True, null=True, verbose_name='Hora do café da manhã')),
                ('breakfast_location', models.CharField(blank=True, max_length=30, verbose_name='Local do café da manhã')),
                ('breakfast_food', models.TextField(blank=True, verbose_name='Alimentos do café da manhã')),
                ('breakfast_food_quantities', models.TextField(blank=True, verbose_name='Quantidades de alimentos do café da manhã')),
                ('snack_after_breakfast_hour', models.TimeField(blank=True, null=True, verbose_name='Hora da colação')),
                ('snack_after_breakfast_location', models.CharField(blank=True, max_length=30, verbose_name='Local da colação')),
                ('snack_after_breakfast_food', models.TextField(blank=True, verbose_name='Alimentos da colação')),
                ('snack_after_breakfast_food_quantities', models.TextField(blank=True, verbose_name='Quantidades de alimentos da colação')),
                ('lunch_hour', models.TimeField(blank=True, null=True, verbose_name='Hora do almoço')),
                ('lunch_location', models.CharField(blank=True, max_length=30, verbose_name='Local do almoço')),
                ('lunch_food', models.TextField(blank=True, verbose_name='Alimentos do almoço')),
                ('lunch_food_quantities', models.TextField(blank=True, verbose_name='Quantidades de alimentos do almoço')),
                ('snack_hour', models.TimeField(blank=True, null=True, verbose_name='Hora do lanche da tarde')),
                ('snack_location', models.CharField(blank=True, max_length=30, verbose_name='Local do lanche da tarde')),
                ('snack_food', models.TextField(blank=True, verbose_name='Alimentos do lanche da tarde')),
                ('snack_food_quantities', models.TextField(blank=True, verbose_name='Quantidades de alimentos do lanche da tarde')),
                ('dinner_hour', models.TimeField(blank=True, null=True, verbose_name='Hora do jantar')),
                ('dinner_location', models.CharField(blank=True, max_length=30, verbose_name='Local do jantar')),
                ('dinner_food', models.TextField(blank=True, verbose_name='Alimentos do jantar')),
                ('dinner_food_quantities', models.TextField(blank=True, verbose_name='Quantidades de alimentos do jantar')),
                ('observation', models.TextField(blank=True, verbose_name='Observação')),
                ('wake_consumption', models.BooleanField(choices=[(True, 'Sim'), (False, 'Não')], verbose_name='Acorda a noite pra comer')),
                ('fat_type', models.CharField(choices=[('Banha de porco', 'Banha de porco'), ('Vegetal', 'Vegetal'), ('Ambas', 'Ambas')], max_length=25, verbose_name='Tipo de gordura usada para a preparação da comida')),
                ('fat_quant', models.CharField(blank=True, max_length=25, verbose_name='Quantidade de gordura gasta por mês')),
                ('who_prepares', multiselectfield.db.fields.MultiSelectField(choices=[('Você', 'Você'), ('Funcionária', 'Funcionária'), ('Parente', 'Parente'), ('Restaurante', 'Restaurante'), ('Delivery/Marmitex', 'Delivery/Marmitex')], max_length=255, verbose_name='Quem prepara as refeições')),
                ('how_sweet', models.CharField(choices=[('Açúcar', 'Açúcar'), ('Adoçante', 'Adoçante')], max_length=255, verbose_name='Como adoça suas refeições?')),
                ('sweet_type', models.CharField(blank=True, max_length=255, verbose_name='Qual o tipo?')),
                ('chewing_time', models.CharField(max_length=255, verbose_name='Tempo gasto na mastigação das refeições')),
                ('soap_s', models.TextField(blank=True, verbose_name='S (Subjetivo)')),
                ('soap_o', models.TextField(blank=True, verbose_name='O (Objetivo)')),
                ('soap_a', models.TextField(blank=True, verbose_name='A (Avaliação)')),
                ('soap_p', models.TextField(blank=True, verbose_name='P (Plano)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('consulta', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='form_base', to='consultas.consultas')),
            ],
            options={
                'verbose_name': 'Formulário Base',
                'verbose_name_plural': 'Formulários Bases',
            },
        ),
        migrations.CreateModel(
            name='PosOperatorio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('surgery_date', models.DateField(verbose_name='Data da cirurgia')),
                ('surgery_plan', models.CharField(choices=[('SUS', 'SUS'), ('Plano de saúde / Particular', 'Plano de saúde / Particular')], max_length=255, verbose_name='Convênio da cirurgia')),
                ('surgery_local', models.CharField(max_length=255, verbose_name='Local da cirurgia')),
                ('psy_time', models.CharField(choices=[('nao realizou', 'Não realizou'), ('Menos de 6 meses', 'Menos de 6 meses'), ('Mais de 6 Meses', 'Mais de 6 Meses')], max_length=255, verbose_name='Quanto tempo durou o acompanhamento psicológico')),
                ('psy_still', models.BooleanField(choices=[(True, 'Sim'), (False, 'Não')], max_length=25, verbose_name='Ainda faz acompanhamento psicológico')),
                ('nutri', models.CharField(choices=[('sim', 'Sim'), ('nao', 'Não'), ('Só laudo', 'Só laudo')], max_length=255, verbose_name='Fez acompanhamento com nutricionista antes da cirurgia')),
                ('nutri_time', models.CharField(choices=[('nao realizou', 'Não realizou'), ('Menos de 6 meses', 'Menos de 6 meses'), ('Mais de 6 Meses', 'Mais de 6 Meses')], max_length=255, verbose_name='Quanto tempo durou o acompanhamento com nutricionista')),
                ('med_stop', models.BooleanField(choices=[(True, 'Sim'), (False, 'Não')], verbose_name='Parou de tomar algum medicamento pós cirurgia')),
                ('stop_type', models.CharField(blank=True, max_length=255, null=True, verbose_name='Qual medicamento parou de tomar')),
                ('vit_consu', models.BooleanField(choices=[(True, 'Sim'), (False, 'Não')], verbose_name='Toma algum suplemento polivitaminico')),
                ('vit_type', models.CharField(blank=True, max_length=255, null=True, verbose_name='Qual suplemento e posologia')),
                ('whey_consu', models.BooleanField(choices=[(True, 'Sim'), (False, 'Não')], verbose_name='Toma algum suplemento proteico')),
                ('whey_type', models.CharField(blank=True, max_length=255, null=True, verbose_name='Qual suplemento e posologia')),
                ('improved_comorb', models.BooleanField(choices=[(True, 'Sim'), (False, 'Não')], verbose_name='Comorbidades melhoraram pós cirurgia')),
                ('improved_type', models.CharField(blank=True, max_length=255, null=True, verbose_name='Quais comorbidades melhoraram?')),
                ('complications', multiselectfield.db.fields.MultiSelectField(choices=[('não possui', 'Não possui'), ('vomitos', 'Vômitos'), ('contipacao intestinal', 'Constipação intestinal'), ('entalamento', 'Entalamento'), ('alopecia', 'Alopécia'), ('halitose', 'Halitose'), ('flatulencia', 'Flatulência'), ('diarreia', 'Diarreia'), ('sindome de dumping', 'Síndrome de Dumping'), ('azia ou nauseas', 'Azia ou náuseas'), ('uma fraca/quebradica ', 'Unha fraca ou quebradiça')], max_length=255, verbose_name='Sintomas gastrointestinais pós-cirurgicos')),
                ('complications_obs', models.TextField(blank=True, verbose_name='Observações')),
                ('food_intolerance', models.BooleanField(choices=[(True, 'Sim'), (False, 'Não')], verbose_name='Apresentou intolerancia alimentar a algum alimento após a CB?')),
                ('food_type', models.CharField(blank=True, max_length=255, verbose_name='Quais alimentos')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('consulta', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='posop', to='consultas.consultas')),
                ('current_comorbidities', models.ManyToManyField(to='registros.comorbidade', verbose_name='Comorbidades atuais')),
                ('current_pathology', models.ManyToManyField(to='registros.patologia', verbose_name='Patologias atuais')),
                ('doctors_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registros.medico', verbose_name='Médico responsável pela cirurgia')),
                ('med_use', models.ManyToManyField(to='registros.remedio', verbose_name='Qual medicamento consome atualmente')),
                ('surgery_technique', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registros.tecnicacirurgica', verbose_name='Técninca ultilizada na cirurgia')),
            ],
            options={
                'verbose_name': 'Pós-Operatório',
                'verbose_name_plural': 'Pós-Operatórios',
            },
        ),
        migrations.CreateModel(
            name='PreOperatorio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('do_diet', models.IntegerField(choices=[(True, 'Sim'), (False, 'Não')], verbose_name='Fez algum tipo de dieta para perda de peso?')),
                ('diet_orientation', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('1', '1 - Eu mesmo(a)'), ('2', '2 - Nutricionista'), ('3', '3 - Médico'), ('4', '4 - Amigos/Familiares'), ('5', '5 - Coaching'), ('6', '6 - Outros')], max_length=11, verbose_name='Quem orientou a dieta?')),
                ('weight_time', models.IntegerField(verbose_name='Há quanto tempo apresenta excesso de peso?')),
                ('weight_reason', multiselectfield.db.fields.MultiSelectField(choices=[('Gestação', 'Gestação'), ('Genética', 'Genética'), ('Hábitos de vida', 'Hábitos de vida'), ('Patologia', 'Patologia'), ('Casamento', 'Casamento')], max_length=25, verbose_name='Causa do ganho de peso')),
                ('obs', models.TextField(blank=True, max_length=255, verbose_name='Observações')),
                ('sup_consumption', models.BooleanField(choices=[(True, 'Sim'), (False, 'Não')], verbose_name='Consome algum suplemento alimentar')),
                ('sup_type', models.CharField(blank=True, max_length=255, verbose_name='Se sim, qual suplemento')),
                ('bari_security', models.BooleanField(choices=[(True, 'Sim'), (False, 'Não')], verbose_name='Está seguro em realizar a cirurgia?')),
                ('familly_support', models.BooleanField(choices=[(True, 'Sim'), (False, 'Não')], verbose_name='Familia apoia a cirurgia?')),
                ('pos_cb_food', models.CharField(choices=[('Sim', 'Sim'), ('Não', 'Não'), ('Muito pouco', 'Muito pouco')], max_length=25, verbose_name='Você sabe como será sua alimentação após a cirurgia')),
                ('description', models.TextField(blank=True, verbose_name='Observações')),
                ('surgery_plan', models.CharField(choices=[('SUS', 'SUS'), ('Plano de saúde / Particular', 'Plano de saúde / Particular')], max_length=255, verbose_name='Convênio da cirurgia')),
                ('surgery_op', models.TextField(verbose_name='Por que decidiu optar pela cirurgia bariatrica')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('comorbidities_type', models.ManyToManyField(to='registros.comorbidade', verbose_name='Comorbidades')),
                ('consulta', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='preop', to='consultas.consultas')),
                ('med_consumption', models.ManyToManyField(to='registros.remedio', verbose_name='Consome medicamentos')),
                ('stomach_problems', models.ManyToManyField(to='registros.problemasgastricos', verbose_name='Problemas gastrointestinais')),
            ],
            options={
                'verbose_name': 'Pré-Operatório',
                'verbose_name_plural': 'Pré-Operatórios',
            },
        ),
    ]
